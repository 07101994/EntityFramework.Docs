.. include:: /_shared/rc1-notice.txt

Generated Properties
====================

.. contents:: In this article:
    :depth: 3

Value Generation Patterns
-------------------------
There are three value generation patterns that can be used for properties.

No value generation
^^^^^^^^^^^^^^^^^^^
No value generation means that you will always supply a valid value to be saved to the database. This valid value must be assigned to new entities before they are added to the context.

Value generated on add
^^^^^^^^^^^^^^^^^^^^^^

Value generated on add means that if you don't specify a value, one will be generated for you.

If you add an entity to the context that has a value assigned to the primary key property, then EF will attempt to insert that value rather than generating a new one. A property is considered to have a value assigned if it is not assigned the CLR default value (``null`` for ``string``, ``0`` for ``int``, ``Guid.Empty`` for ``Guid``, etc.).

Depending on the database provider being used, values may be generated client side by EF or in the database. If the value is generated by the database, then EF may assign a temporary value when you add the entity to the context. This temporary value will then be replaced by the database generated value during ``SaveChanges``.

Value generated on add or update
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Value generated on add or update means that a new value is generated every time the record is saved (insert or update).

Like 'value generated on add', if you specify a value for the property on a newly added instance of an entity, that value will be inserted rather than a value being generated. Also, if you explicitly change the value assigned to the property (thus marking it as modified) then that new value will be set in the database rather than a value being generated.

Conventions
-----------

By convention, primary keys that are of an integer or GUID data type will be setup to have values generated on add. All other properties will be setup with no value generation.

Data Annotations
----------------

No value generation
^^^^^^^^^^^^^^^^^^^

.. literalinclude:: configuring/sample/EFModeling.Configuring.DataAnnotations/Samples/ValueGeneratedNever.cs
        :language: c#
        :lines: 11-16
        :emphasize-lines: 3
        :linenos:

Value generated on add
^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: configuring/sample/EFModeling.Configuring.DataAnnotations/Samples/ValueGeneratedOnAdd.cs
        :language: c#
        :lines: 12-18
        :emphasize-lines: 5
        :linenos:

Value generated on add or update
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: configuring/sample/EFModeling.Configuring.DataAnnotations/Samples/ValueGeneratedOnAddOrUpdate.cs
        :language: c#
        :lines: 12-18
        :emphasize-lines: 5
        :linenos:

Fluent API
----------

You can use the Fluent API to change the value generation pattern for a given property.

No value generation
^^^^^^^^^^^^^^^^^^^

.. literalinclude:: configuring/sample/EFModeling.Configuring.FluentAPI/Samples/ValueGeneratedNever.cs
        :language: c#
        :lines: 5-22
        :emphasize-lines: 7-9
        :linenos:

Value generated on add
^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: configuring/sample/EFModeling.Configuring.FluentAPI/Samples/ValueGeneratedOnAdd.cs
        :language: c#
        :lines: 5-23
        :emphasize-lines: 7-9
        :linenos:

Value generated on add or update
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. literalinclude:: configuring/sample/EFModeling.Configuring.FluentAPI/Samples/ValueGeneratedOnAddOrUpdate.cs
        :language: c#
        :lines: 6-24
        :emphasize-lines: 7-9
        :linenos:
